form { padding: 0 18px; }

fieldset[name="fetcher"] { margin-bottom: 60px; }

input:matches([name="url"], [name="fileName"], [name="source"]) {
  display: block;
  width: 100%;
  padding: 3px 2px;
  border-bottom: var(--main-border-style);
}

label[for="fileName"] { font-weight: 600; }

input[name="fileName"]:invalid { border-color: var(--highlight); }
input[name="fileName"]:invalid::placeholder { color: var(--highlight); }

/* --- FILE UPLOADER AND INFO CARD --- */

form > div {
  display: inline-block;
  width: 100%;
}

.file-uploader, .loading, .error, .video-info {
  border: var(--main-border-style);
  border-radius: 5px;
}

.file-uploader, .loading, .video-info {
  min-height: 132px;
}

.loading, .error, .video-info, .progress {
  padding: 10px;
}

.file-uploader {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--background);
  color: var(--secondary);
  transition: background-color 150ms;
}

.file-uploader:matches(::before, ::after) {
  content: '';
  pointer-events: none;
  display: inherit;
  position: absolute;
  background-color: inherit;
}

.file-uploader::before {
  width: calc(100% + 4px);
  height: calc(100% - 50px);
}

.file-uploader::after {
  width: calc(100% - 50px);
  height: calc(100% + 4px);
}

fieldset:not(:disabled) > :matches(.drag-enter, .file-uploader:active) {
  background-color: var(--primary);
  color: var(--background);
}

.file-uploader > p,
input[type="file"] {
  z-index: 2
}

input[type="file"] {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
}

@keyframes slide_up {
  0% { transform: translateY(138px) }
  100% { transform: translateY(0) }
}

.loading {
  display: flex;
  justify-content: center;
  align-items: center;
  transform-origin: top center;
  animation: slide_up 250ms 250ms backwards;
}

.error {
  position: relative;
  background-color: var(--error-background);
}

.error > button {
  all: unset;
  position: absolute;
  top: 5px;
  right: 5px;
  background-color: transparent;
  color: currentColor;
  font: 400 1rem 'Material Icons';
}

.error > button:hover {
  background-color: transparent;
  color: currentColor;
}

.error > p { margin-top: 6px; }

code {
  user-select: text;
  display: block;
  margin-top: 5px;
  padding: inherit;
  word-wrap: break-word;
  hyphens: none;
}

code::selection {
  background: var(--primary);
  color: var(--background);
}

.video-info { font-size: 0; }

.video-info > img {
  width: 192px;
  margin-right: 10px;
}

.video-info > div {
  display: inline-block;
  width: calc(100% - 202px);
  font-size: 0.875rem;
}

ul {
  list-style-type: none;
  line-height: 18px;
}


/* --- SCREEN RECORDER --- */

@keyframes blink {
  0%, 50% { background-color: var(--highlight); }
  51%, 100% { background-color: var(--background); }
}

.screen-record {
  text-align: center;
  margin-top: 60px;
  color: var(--secondary);
}

button[name="record"] {
  display: block;
  position: relative;
  width: 50px;
  height: 50px;
  margin: 10px auto;
  border-radius: 50%;
}

button[name="record"]::after {
  content: '';
  display: inherit;
  position: absolute;
  top: 12px;
  left: 12px;
  width: 26px;
  height: 26px;
  border-radius: inherit;
  background-color: var(--background);
}

button[name="record"].recording::after {
  animation: blink 1000ms infinite;
}

button[name="record"] ~ p {
  font-size: 10px;
  margin-top: 10px;
}


/* --- FORM ELEMENTS --- */

.timecode {
  display: inline-block;
  margin-right: 20px;
  margin-bottom: 0;
}

.timecode > input[type="text"] { width: 80px; }

.timecode input:disabled { color: var(--disabled); }

.timecode > label {
  display: inherit;
  margin-right: 10px;
  margin-bottom: 0;
}

details {
  padding: 10px 8px;
  border-radius: 5px;
  background-color: var(--background-alt);
}

details > fieldset { margin-bottom: 10px; }

details > fieldset:nth-of-type(-n+2) { margin-top: 5px; }
details > fieldset:nth-of-type(odd)  { margin-left: 17px; }
details > fieldset:nth-of-type(even) { margin-left: 20px; }

details > fieldset:not([name="source-overlay"]) {
  display: inline-block;
  width: calc((100% - 57px) / 2);
}

details > fieldset:not([name="source-overlay"]) > legend {
  margin-bottom: 5px;
}

summary::-webkit-details-marker { display: none; }

summary::before {
  content: 'keyboard_arrow_right';
  font: 600 1.25rem 'Material Icons';
  vertical-align: -5px;
}

details[open] summary::before { content: 'keyboard_arrow_down'; }

fieldset[name="source-overlay"] { margin-right: 17px; }

input[name="source"] { margin-bottom: 5px; }

input[name="source"]::-webkit-calendar-picker-indicator { display: none; }

button[type="submit"] { margin-right: 5px; }


/* --- PROGRESS METERS --- */

.progress { font-size: 0.75rem; }

.progress > p { font-weight: 600; }

progress {
  width: 100%;
  height: 14px;
  margin: 2px 0;
  border: var(--main-border-style);
  border-radius: 2px;
}

::-webkit-progress-bar { background-color: var(--background); }
::-webkit-progress-value { background-color: var(--primary); }

progress + span {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

progress + span > span:first-of-type { flex: 1; }

.completed { text-align: center; }

.completed > p:first-of-type { margin-bottom: 5px; }
.completed > p:last-of-type { margin-bottom: 20px; }

button[name="cancel"] {
  display: block;
  margin-top: 10px;
}


/* --- UPDATER --- */

.updater {
  margin-bottom: 20px;
  text-align: center;
  color: var(--secondary);
}

.loading ~ .updater { display: none; }

.updater > progress {
  width: 250px;
  border-color: var(--secondary);
}

.updater > ::-webkit-progress-value { background-color: var(--secondary); }

.updater > button { margin-top: 10px; }
